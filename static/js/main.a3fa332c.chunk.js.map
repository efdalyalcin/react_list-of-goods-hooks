{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","lengths","App","goods","useState","isStarted","setStart","isReversed","setReverse","none","sortBy","setSortBy","selection","setSelection","start","current","reset","name","sort","a","b","localeCompare","length","reverse","className","type","onClick","htmlFor","value","onChange","event","Number","currentTarget","map","num","filter","good","ReactDOM","render","document","getElementById"],"mappings":"wJAkBKA,E,4CAfCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,K,SAEjDF,O,eAAAA,I,eAAAA,I,oBAAAA,M,KAML,IAgLeG,EAhLO,WACpB,IAAIC,EAAK,UAAOH,GAChB,EAA8BI,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAASL,EAAOU,MAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCP,mBAAS,GAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KAEMC,EAAQ,WACZR,GAAS,SAAAS,GAAO,OAAKA,MAejBC,EAAQ,WACZR,GAAW,GACXG,EAAUZ,EAAOU,OAUnB,OAAQC,GACN,KAAKX,EAAOkB,KACVd,EAAMe,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,cAAcD,MACtC,MACF,KAAKrB,EAAOuB,OACVnB,EAAMe,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEG,OAASF,EAAEE,UACnC,MACF,QACGnB,EAAK,UAAOH,GAOjB,OAJIO,GACFJ,EAAMoB,UAIN,qBAAKC,UAAU,gBAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,mCAAf,SACE,oBAAIA,UAAU,aAAd,qBAGF,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,UAAf,WACInB,GACA,wBACEoB,KAAK,SACLD,UAAU,0DAMVE,QAASZ,EARX,mBAcDT,GACC,wBACEoB,KAAK,SACLD,UAAU,wDAKVE,QAtDO,WACnBV,IACAF,KA6CU,uBAgBN,qBAAKU,UAAU,iBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,uBAAOG,QAAQ,eAAf,qCACA,wBACEV,KAAK,eACLW,MAAOhB,EACPiB,SAAU,SAACC,GACTjB,EAAakB,OAAOD,EAAME,cAAcJ,SAJ5C,SAOG3B,EAAQgC,KAAI,SAAAC,GAAG,OACd,wBAAkBN,MAAOM,EAAzB,SAA+BA,GAAlBA,eAOvB,qBAAKV,UAAU,iBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,wBACEC,KAAK,SACLD,UAAU,wBACVE,QAxGI,WACdlB,GAAW,SAAAO,GAAO,OAAKA,MAoGf,qBAQA,wBACEU,KAAK,SACLD,UAAU,wBACVE,QA5GO,WACjBf,EAAUZ,EAAOkB,OAwGT,iCAQA,wBACEQ,KAAK,SACLD,UAAU,wBACVE,QAhHS,WACnBf,EAAUZ,EAAOuB,SA4GT,4BAQA,wBACEG,KAAK,SACLD,UAAU,2BACVE,QAASV,EAHX,wBAUJ,qBAAKQ,UAAU,iBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,yDAAf,SAKGnB,GACC,+BACE,6CAEEF,EACGgC,QA7HE,SAACC,GAAD,OAAkBA,EAAKd,QAAUV,KA8HnCqB,KAAI,SAACG,GAAD,OACH,6BACGA,GADMA,qBCrLjCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.a3fa332c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst lengths: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nenum SortBy {\n  none,\n  name,\n  length,\n}\n\nconst App: React.FC = () => {\n  let goods = [...goodsFromServer];\n  const [isStarted, setStart] = useState(false);\n  const [isReversed, setReverse] = useState(false);\n  const [sortBy, setSortBy] = useState(SortBy.none);\n  const [selection, setSelection] = useState(1);\n\n  const start = () => {\n    setStart(current => !current);\n  };\n\n  const reverse = () => {\n    setReverse(current => !current);\n  };\n\n  const sortByName = () => {\n    setSortBy(SortBy.name);\n  };\n\n  const sortByLength = () => {\n    setSortBy(SortBy.length);\n  };\n\n  const reset = () => {\n    setReverse(false);\n    setSortBy(SortBy.none);\n  };\n\n  const hideAndReset = () => {\n    reset();\n    start();\n  };\n\n  const filterByLength = (good: string) => good.length >= selection;\n\n  switch (sortBy) {\n    case SortBy.name:\n      goods.sort((a, b) => (a.localeCompare(b)));\n      break;\n    case SortBy.length:\n      goods.sort((a, b) => (a.length - b.length));\n      break;\n    default:\n      (goods = [...goodsFromServer]);\n  }\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"App container\">\n      <div className=\"columns is-multiline\">\n        <div className=\"column is-full has-text-centered\">\n          <h1 className=\"title is-1\">Goods</h1>\n        </div>\n\n        <div className=\"column is-full\">\n          <div className=\"columns\">\n            {!isStarted && (\n              <button\n                type=\"button\"\n                className=\"\n                  button\n                  is-success\n                  column\n                  is-half\n                  is-offset-one-quarter\"\n                onClick={start}\n              >\n                Start\n              </button>\n            )}\n\n            {isStarted && (\n              <button\n                type=\"button\"\n                className=\"button\n                  is-danger\n                  column\n                  is-half\n                  is-offset-one-quarter\"\n                onClick={hideAndReset}\n              >\n                Hide\n              </button>\n            )}\n          </div>\n\n        </div>\n\n        <div className=\"column is-full\">\n          <div className=\"columns\">\n            <div className=\"column is-half is-offset-one-quarter\">\n              <label htmlFor=\"select-field\">Select minimum length: </label>\n              <select\n                name=\"select-field\"\n                value={selection}\n                onChange={(event) => {\n                  setSelection(Number(event.currentTarget.value));\n                }}\n              >\n                {lengths.map(num => (\n                  <option key={num} value={num}>{num}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"column is-full\">\n          <div className=\"columns is-variable is-2\">\n            <button\n              type=\"button\"\n              className=\"button is-info column\"\n              onClick={reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-info column\"\n              onClick={sortByName}\n            >\n              Sort Alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-info column\"\n              onClick={sortByLength}\n            >\n              Sort by Length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-warning column\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          </div>\n        </div>\n\n        <div className=\"column is-full\">\n          <div className=\"columns\">\n            <div className=\"column\n              is-half\n              is-offset-one-quarter\n              has-text-centered\"\n            >\n              {isStarted && (\n                <ul>\n                  <h2>Goods List:</h2>\n                  {\n                    goods\n                      .filter(filterByLength)\n                      .map((good) => (\n                        <li key={good}>\n                          {good}\n                        </li>\n                      ))\n                  }\n                </ul>\n              )}\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}